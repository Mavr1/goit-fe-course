{"version":3,"sources":["webpack:///./js/notice.js","webpack:///./js/responseLogic.js","webpack:///./js/render.js","webpack:///./js/markup.js","webpack:///./js/input.js","webpack:///./js/fetchCountries.js"],"names":["myStack","Stack","dir1","dir2","myAlert","message","error","text","type","sticker","maxTextHeight","delay","stack","responseListCheck","responseList","length","countryMarkup","reduce","acc","item","name","document","querySelector","innerHTML","capital","population","languages","markup","flag","console","log","inputRef","debouncedInput","_","debounce","country","value","fetch","baseUrl","then","response","json","data","addEventListener"],"mappings":"qMAEMA,EAAU,IAAIC,QAAM,CACxBC,KAAM,KACNC,KAAM,UAGKC,EAAU,SAAAC,GAAO,OAC5BC,gBAAM,CACJC,KAAMF,EACNG,KAAM,QACNC,SAAS,EACTC,cAAe,KACfC,MAAO,IACPC,MAAOZ,KCXEa,EAAoB,SAAAC,GAC/B,OAAIA,EAAaC,OAAS,GAAKD,EAAaC,OAAS,ICD/CC,EDEiBF,ECFYG,QAAO,SAACC,EAAKC,GAC9C,OAAQD,ECJoC,ODIPC,EAAKC,KCJE,UDK3C,SACsBC,SAASC,cAAc,iBAC/BC,UAAYP,IDED,IAAxBF,EAAaC,QELb,EFMgBD,EENhB,GADFM,EACE,EADFA,KAAMI,EACJ,EADIA,QAASC,EACb,EADaA,WAAYC,EACzB,EADyBA,UDQvBC,ECNN,0CADI,EADoCC,KAExC,gDACoBR,EADpB,gCAEsBI,EAFtB,kCAGyBC,EAHzB,oCAKAC,EAAUT,QAAO,SAACC,EAAKC,GAEvB,OADAD,GAAO,8BAA8BC,EAAKC,KAAvC,UAEF,IARD,YDOAS,QAAQC,IAAIH,QACaN,SAASC,cAAc,iBAC/BC,UAAYI,SDAzBb,EAAaC,OAAS,GACxBX,EAAQ,8BAIVA,EAAQ,4BCjB0B,IAC5BY,ECCF,EADFI,EAAMI,EAASC,EAAYC,EDQvBC,GERFI,G,UAAWV,SAASC,cAAc,cAElCU,EAAiBC,EAAEC,UAAS,WCFT,IAAAC,IDGbJ,EAASK,MCAnBC,MAAMC,yCAAsBH,GACzBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI7B,EAAkB6B,QDDjC,KAEHX,EAASY,iBAAiB,QAASX,K","file":"main.db4b4fcf8068b7591380.js","sourcesContent":["import { error, Stack } from '@pnotify/core';\r\n\r\nconst myStack = new Stack({\r\n  dir1: 'up',\r\n  dir2: 'right',\r\n});\r\n\r\nexport const myAlert = message =>\r\n  error({\r\n    text: message,\r\n    type: 'error',\r\n    sticker: false,\r\n    maxTextHeight: null,\r\n    delay: 4000,\r\n    stack: myStack,\r\n  });\r\n","import { myAlert } from './notice';\r\nimport { renderQueryCountries, renderUniqCountry } from './render';\r\n\r\nexport const responseListCheck = responseList => {\r\n  if (responseList.length > 1 && responseList.length < 11) {\r\n    renderQueryCountries(responseList);\r\n    return;\r\n  }\r\n\r\n  if (responseList.length === 1) {\r\n    renderUniqCountry(responseList);\r\n    return;\r\n  }\r\n\r\n  if (responseList.length > 11) {\r\n    myAlert('Please specify you request');\r\n    return;\r\n  }\r\n\r\n  myAlert(\"Can't find your country\");\r\n  return;\r\n};\r\n","import { countryMarkupTemplate, uniqCountryMarkupTemplate } from './markup';\r\n\r\nexport const renderQueryCountries = countriesArr => {\r\n  const countryMarkup = countriesArr.reduce((acc, item) => {\r\n    return (acc += countryMarkupTemplate(item.name));\r\n  }, '');\r\n  const countriesListRef = document.querySelector('.js_countries');\r\n  countriesListRef.innerHTML = countryMarkup;\r\n};\r\n\r\nexport const renderUniqCountry = countryArr => {\r\n  const markup = uniqCountryMarkupTemplate(countryArr);\r\n  console.log(markup);\r\n  const countriesListRef = document.querySelector('.js_countries');\r\n  countriesListRef.innerHTML = markup;\r\n};\r\n","export const countryMarkupTemplate = countryName => `<li>${countryName}</li>`;\r\n\r\nexport const uniqCountryMarkupTemplate = ([\r\n  { name, capital, population, languages, flag },\r\n]) => {\r\n  return `<img class = \"flag\" width = \"400\" src=\"${flag}\" alt=\"flag of {name}\">\r\n<h2 class=\"js_name\">${name}</h2>\r\n<p class=\"js_capital\">${capital}</p>\r\n<p class=\"js_population\">${population}</p>\r\n<ul class=\"js_languages\">\r\n${languages.reduce((acc, item) => {\r\n  acc += `<li class=\"languages-item\">${item.name}</li>`;\r\n  return acc;\r\n}, '')}\r\n</ul>\r\n`;\r\n};\r\n","import { fetchData } from './fetchCountries';\r\nimport { debounce } from 'lodash';\r\n\r\nconst inputRef = document.querySelector('.js_input');\r\n\r\nconst debouncedInput = _.debounce(() => {\r\n  fetchData(inputRef.value);\r\n}, 1000);\r\n\r\ninputRef.addEventListener('input', debouncedInput);\r\n","import { renderQueryCountries } from './render';\r\nimport { responseListCheck } from './responseLogic';\r\n\r\nexport const fetchData = country => {\r\n  const baseUrl = 'https://restcountries.eu/';\r\n  const bodyFetch = 'rest/v2/name/';\r\n  fetch(baseUrl + bodyFetch + country)\r\n    .then(response => response.json())\r\n    .then(data => responseListCheck(data));\r\n};\r\n"],"sourceRoot":""}